@page "/student_list_v1"
@using APIDrivingProject.Models
@using DrivingClassLibary.Models;
@inject HttpClient Http
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h1 style="text-align: center; margin-bottom: 1rem; font-size: 2.5rem; color: #333;">Student List</h1>

<div style="display: flex; justify-content: center; flex-wrap: wrap; gap: 20px; padding: 20px;">
    @foreach (var student in students)
    {
        <div style="background: linear-gradient(145deg, #e0e0e0, #ffffff); border-radius: 15px; box-shadow: 10px 10px 30px rgba(0, 0, 0, 0.2), -5px -5px 20px rgba(255, 255, 255, 0.7); width: 300px; padding: 20px; text-align: center; transition: transform 0.3s ease, box-shadow 0.3s ease;">
            <h3 style="font-size: 1.5rem; font-weight: bold; color: #007bff; margin-bottom: 10px;">@student.FirstName @student.LastName</h3>
            <p style="font-size: 1rem; margin-bottom: 10px;"><strong>Email:</strong> @student.Email</p>
            <p style="font-size: 1rem; margin-bottom: 10px;"><strong>Phone:</strong> @student.PhoneNumber</p>
            <p style="font-size: 1rem; margin-bottom: 15px;"><strong>Lessons Taken:</strong> @student.LessonsTaken</p>
            <button style="background: #007bff; color: #fff; border: none; border-radius: 10px; padding: 10px 20px; font-size: 1rem; cursor: pointer; transition: background 0.3s ease, transform 0.2s ease;" @onclick="() => EditStudent(student.PersonId)">
                Edit
            </button>
        </div>
    }
</div>

@code {
    private List<Student> students = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            students = await Http.GetFromJsonAsync<List<Student>>("api/Students");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading students: {ex.Message}");
        }
    }

    private void EditStudent(int studentId)
    {
        // ניתוב לדף עריכת תלמיד
        Navigation.NavigateTo($"/edit_student/{studentId}");
    }
}
